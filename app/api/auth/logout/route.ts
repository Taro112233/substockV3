// ðŸ“„ File: app/api/auth/logout/route.ts (Fixed ESLint warnings)
import { NextResponse } from 'next/server'; // âœ… à¸¥à¸š NextRequest à¸—à¸µà¹ˆà¹„à¸¡à¹ˆà¹„à¸”à¹‰à¹ƒà¸Šà¹‰
import { serialize } from 'cookie';

export async function POST() { // âœ… à¸¥à¸š req parameter à¸—à¸µà¹ˆà¹„à¸¡à¹ˆà¹„à¸”à¹‰à¹ƒà¸Šà¹‰
  try {
    // à¸ªà¸£à¹‰à¸²à¸‡ cookie à¸—à¸µà¹ˆà¸«à¸¡à¸”à¸­à¸²à¸¢à¸¸à¹€à¸žà¸·à¹ˆà¸­à¸¥à¸š token
    const expiredCookie = serialize('auth-token', '', {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 0, // à¸«à¸¡à¸”à¸­à¸²à¸¢à¸¸à¸—à¸±à¸™à¸—à¸µ
      path: '/'
    });
    
    const response = NextResponse.json({
      success: true,
      message: 'Logged out successfully'
    });
    
    response.headers.set('Set-Cookie', expiredCookie);
    return response;
    
  } catch (error) {
    console.error('Logout error:', error);
    return NextResponse.json(
      { error: 'Internal server error' }, 
      { status: 500 }
    );
  }
}

// GET method à¸ªà¸³à¸«à¸£à¸±à¸š logout à¸œà¹ˆà¸²à¸™ URL (optional)
export async function GET() { // âœ… à¸¥à¸š req parameter
  return POST(); // âœ… à¹„à¸¡à¹ˆà¸•à¹‰à¸­à¸‡à¸ªà¹ˆà¸‡ req parameter
}