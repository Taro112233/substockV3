// This file is auto-generated. Do not edit manually.
// Edit files in prisma/schemas/ directory instead.
// Last generated: 2025-08-22T19:11:59.278Z
// Hospital Pharmacy Stock Management System V3.0

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// ==========================================
// BASE - V3.0
// ==========================================

// prisma/schemas/base.prisma
// ===== 1. BASE CONFIGURATION & ENUMS - V3.0 UPDATED =====

// ⚠️ NOTE: Remove generator and datasource from here - they're in main schema

// ===== CORE ENUMS =====
enum Department {
  PHARMACY    // คลังยา
  OPD         // OPD
}

enum UserStatus {
  UNAPPROVED  // ยังไม่ได้รับการอนุมัติ
  APPROVED    // อนุมัติแล้ว
  SUSPENDED   // ระงับการใช้งาน
  INACTIVE    // ไม่ใช้งาน
}

// ⭐ ลบ Role enum ออก เพราะไม่ใช้ fixed roles
// แต่ละ user สามารถทำงานได้ทุก department ตามหน้าที่ใช้งาน

enum TransactionType {
  // การเคลื่อนไหวสต็อกจริง (มีผลต่อ totalQuantity)
  RECEIVE_EXTERNAL    // รับยาจากภายนอก (ซื้อ/บริจาค)
  DISPENSE_EXTERNAL   // จ่ายยาให้ผู้ป่วย
  TRANSFER_OUT        // ส่งยาให้แผนกอื่น
  TRANSFER_IN         // รับยาจากแผนกอื่น
  ADJUST_INCREASE     // ปรับเพิ่มสต็อก (นับสต็อก/คืนยา/แก้ไขข้อมูล)
  ADJUST_DECREASE     // ปรับลดสต็อก (เสียหาย/หมดอายุ/สูญหาย)
  RESERVE             // จองยา (ลด available แต่ totalQuantity เท่าเดิม)
  UNRESERVE           // ยกเลิกการจอง (เพิ่ม available)

  // ✅ การจัดการ Minimum Stock (ไม่มีผลต่อ totalQuantity)
  MIN_STOCK_INCREASE  // เพิ่มจำนวนขั้นต่ำ
  MIN_STOCK_DECREASE  // ลดจำนวนขั้นต่ำ
  MIN_STOCK_RESET     // รีเซ็ตจำนวนขั้นต่ำ
  
  // ✅ การปรับปรุงข้อมูลอื่นๆ (ไม่มีผลต่อจำนวนสต็อก)
  DATA_UPDATE         // อัปเดตข้อมูลทั่วไป
  PRICE_UPDATE        // อัปเดตราคายา
  INFO_CORRECTION     // แก้ไขข้อมูลยา
}

enum TransferStatus {
  PENDING     // กำลังเบิก / ใบเบิกใหม่
  APPROVED    // กำลังเตรียมจัดส่ง
  PREPARED    // กำลังจัดส่ง (เตรียมของเสร็จ)
  DELIVERED   // จัดส่งสำเร็จ
  CANCELLED   // ยกเลิก
}

// ===== DRUG-SPECIFIC ENUMS =====
enum DosageForm {
  APP    // Applicator
  BAG    // Bag
  CAP    // Capsule
  CR     // Cream
  DOP    // Drops
  ENE    // Enema
  GEL    // Gel
  HAN    // Hand
  IMP    // Implant
  INJ    // Injection
  LIQ    // Liquid
  LOT    // Lotion
  LVP    // Large Volume Parenteral
  MDI    // Metered Dose Inhaler
  MIX    // Mixture
  NAS    // Nasal
  NB     // Nebule
  OIN    // Ointment
  PAT    // Patch
  POW    // Powder
  PWD    // Powder (alternate)
  SAC    // Sachet
  SOL    // Solution
  SPR    // Spray
  SUP    // Suppository
  SUS    // Suspension
  SYR    // Syrup
  TAB    // Tablet
  TUR    // Tube
}

enum DrugCategory {
  REFER           // ยา refer
  HAD      // ยา High Alert Drug
  NARCOTIC        // ยา เสพติด
  REFRIGERATED    // ยา แช่เย็น
  PSYCHIATRIC     // ยา จิตเวช
  FLUID           // สารน้ำ
  GENERAL         // ยาทั่วไป (default)
  TABLET          // ยาเม็ด
  SYRUP           // ยาน้ำ
  INJECTION       // ยาฉีด
  EXTEMP       // ยาภายนอก
  ALERT           // ยาที่ต้องเฝ้าระวังพิเศษ (อัตราใช้ผันผวนสูง)
}

// ==========================================
// DRUG - V3.0
// ==========================================

// prisma/schemas/drug.prisma
// ===== 3. DRUG MASTER SCHEMA =====

// Enhanced Drug Model with Hospital-specific Data and Enums
model Drug {
  id              String       @id @default(cuid())
  hospitalDrugCode String      @unique // รหัสยาเฉพาะโรงพยาบาล
  name            String       // ชื่อยาทางการค้า
  genericName     String?      // ชื่อสามัญยา
  dosageForm      DosageForm   // รูปแบบยา (enum)
  strength        String?      // ความแรงยา (500, 250)
  unit            String       // หน่วยนับ (mg, g, mg/5ml)
  packageSize     String?      // ขนาดบรรจุ (100's, 500)
  pricePerBox     Float        @default(0) // ราคาต่อกล่อง/หน่วย
  category        DrugCategory @default(GENERAL) // หมวดหมู่ยา (enum)
  isActive        Boolean      @default(true)
  notes           String?      // หมายเหตุเพิ่มเติม
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  
  // Relations
  stocks          Stock[]
  transferItems   TransferItem[]
  batches         DrugBatch[]
  
  // Indexes สำหรับ Performance
  @@index([hospitalDrugCode])
  @@index([name])
  @@index([category])
  @@index([dosageForm])
  @@index([isActive])
  @@index([genericName])
  @@map("drugs")
}

// Drug Batch Management (LOT/EXPIRY)
model DrugBatch {
  id            String   @id @default(cuid())
  drugId        String
  department    Department
  lotNumber     String
  expiryDate    DateTime
  manufacturer  String?
  quantity      Int      @default(0)
  costPerUnit   Float    @default(0)
  receivedDate  DateTime @default(now())
  
  // Relations
  drug          Drug     @relation(fields: [drugId], references: [id], onDelete: Cascade)
  transactions  StockTransaction[]
  
  // Constraints
  @@unique([drugId, department, lotNumber, expiryDate])
  
  // Indexes
  @@index([expiryDate])
  @@index([department])
  @@index([drugId])
  @@map("drug_batches")
}

// ==========================================
// STOCK - V3.0
// ==========================================

// prisma/schemas/stock.prisma
// ===== 4. STOCK MANAGEMENT SCHEMA =====

// Stock with Department Isolation & Batch Tracking
model Stock {
  id            String     @id @default(cuid())
  drugId        String
  department    Department
  totalQuantity Int        @default(0) // รวมจากทุก batch
  reservedQty   Int        @default(0) // จำนวนที่จองไว้
  minimumStock  Int        @default(10) // minimum stock ของแผนกนั้น
  fixedStock    Int        @default(0) // minimum stock ของแผนกนั้น
  totalValue    Float      @default(0) // มูลค่ารวม
  lastUpdated   DateTime   @updatedAt

  // Relations
  drug         Drug               @relation(fields: [drugId], references: [id], onDelete: Cascade)
  transactions StockTransaction[]

  // Constraints - แต่ละยาใน 1 แผนกมี stock record เดียว
  @@unique([drugId, department])
  // Indexes สำหรับ Performance
  @@index([department])
  @@index([totalQuantity])
  @@index([drugId])
  @@map("stocks")
}

// Enhanced Transaction Tracking
model StockTransaction {
  id         String  @id @default(cuid())
  stockId    String
  userId     String
  batchId    String? // Link to specific batch
  transferId String? // Link to transfer if applicable

  type      TransactionType
  quantity  Int // จำนวน (+/-)
  beforeQty Int // จำนวนก่อนทำรายการ
  afterQty  Int // จำนวนหลังทำรายการ

  unitCost  Float @default(0)
  totalCost Float @default(0)

  reference String? // เลขที่อ้างอิง
  note      String? // หมายเหตุ
  createdAt DateTime @default(now())

  // Relations
  stock    Stock      @relation(fields: [stockId], references: [id], onDelete: Cascade)
  user     User       @relation(fields: [userId], references: [id])
  batch    DrugBatch? @relation(fields: [batchId], references: [id])
  transfer Transfer?  @relation(fields: [transferId], references: [id]) // ⭐ เพิ่มใหม่

  // Indexes สำหรับ Performance & Reporting
  @@index([stockId])
  @@index([type])
  @@index([transferId])
  @@index([createdAt])
  @@index([userId])
  @@map("stock_transactions")
}

// ==========================================
// TRANSFER - V3.0
// ==========================================

// prisma/schemas/transfer.prisma
// ===== 5. TRANSFER SYSTEM SCHEMA =====

// Enhanced Transfer System with Multi-step Workflow
model Transfer {
  id                String         @id @default(cuid())
  requisitionNumber String         @unique // เลขที่ใบเบิก (manual input)
  title             String         // ชื่อใบเบิก
  purpose           String         // วัตถุประสงค์
  
  // Departments & Users
  fromDept          Department     // หน่วยงานที่ขอเบิก (ต้นทาง)
  toDept            Department     // หน่วยงานที่รับเบิก (ปลายทาง)
  
  // User Signatures (Auto from login)
  requesterId       String         // ผู้เบิก
  approverId        String?        // ผู้อนุมัติ
  dispenserId       String?        // ผู้จ่าย
  receiverId        String?        // ผู้รับ
  
  // Status & Notes
  status            TransferStatus @default(PENDING)
  requestNote       String?        // หมายเหตุการขอ
  approvalNote      String?        // หมายเหตุการอนุมัติ
  
  // Financial
  totalItems        Int            @default(0)
  totalValue        Float          @default(0) // มูลค่ารวม
  
  // Timestamps - Track complete workflow
  requestedAt       DateTime       @default(now())
  approvedAt        DateTime?
  dispensedAt       DateTime?      // วันที่เตรียมของเสร็จ
  receivedAt        DateTime?      // วันที่รับของ
  
  // Relations
  requester         User           @relation("RequesterUser", fields: [requesterId], references: [id])
  approver          User?          @relation("ApproverUser", fields: [approverId], references: [id])
  dispenser         User?          @relation("DispenserUser", fields: [dispenserId], references: [id])
  receiver          User?          @relation("ReceiverUser", fields: [receiverId], references: [id])
  items             TransferItem[]
  stockTransactions StockTransaction[] // ⭐ เพิ่มใหม่
  
  // Indexes สำหรับ Performance
  @@index([status])
  @@index([fromDept])
  @@index([toDept])
  @@index([requestedAt])
  @@index([requisitionNumber])
  @@map("transfers")
}

// Enhanced Transfer Items with Batch Information
model TransferItem {
  id              String   @id @default(cuid())
  transferId      String
  drugId          String
  
  // Quantities at different stages
  requestedQty    Int      // จำนวนเบิก
  approvedQty     Int?     // จำนวนอนุมัติ
  dispensedQty    Int?     // จำนวนจ่าย (ใบส่งของ)
  receivedQty     Int?     // จำนวนรับจริง
  
  // Batch Information (for dispensing)
  lotNumber       String?  // Lot number
  expiryDate      DateTime? // วันหมดอายุ
  manufacturer    String?  // บริษัท
  
  // Financial
  unitPrice       Float    @default(0) // ราคาต่อหน่วย
  totalValue      Float    @default(0) // มูลค่า (dispensedQty × unitPrice)
  
  // Notes
  itemNote        String?  // หมายเหตุรายการ
  
  // Relations
  transfer        Transfer @relation(fields: [transferId], references: [id], onDelete: Cascade)
  drug            Drug     @relation(fields: [drugId], references: [id])
  
  // Indexes
  @@index([transferId])
  @@index([drugId])
  @@map("transfer_items")
}

// ==========================================
// USER - V3.0
// ==========================================

// prisma/schemas/user.prisma
// ===== 2. USER MANAGEMENT SCHEMA - V3.0 UNIFIED ACCESS =====

// Simple User Management - ผู้ใช้สามารถเข้าใช้งานได้ทุกแผนก
// Context มาจากหน้าที่ใช้งาน ไม่ใช่จาก fixed role/department
model User {
  id          String     @id @default(cuid())
  username    String     @unique  // ⭐ REQUIRED: For authentication
  password    String     // bcrypt hashed
  firstName   String     // ⭐ REQUIRED: First name
  lastName    String     // ⭐ REQUIRED: Last name  
  position    String?    // ตำแหน่งงาน (ข้อมูลสำหรับแสดงเท่านั้น)
  
  // ⭐ ไม่มี department/role กำหนดตาย เพราะใช้งานได้ทุกแผนก
  // Context มาจากการเลือกใช้งานในหน้านั้นๆ
  
  status      UserStatus @default(UNAPPROVED) // ⭐ REQUIRED: User approval status
  isActive    Boolean    @default(true)
  lastLogin   DateTime?  // ⭐ REQUIRED: Track login activity
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  // Relations - เชื่อมต่อกับ actions ทั้งหมดที่ user ทำได้
  stockTransactions     StockTransaction[]
  transfersRequested    Transfer[] @relation("RequesterUser")
  transfersApproved     Transfer[] @relation("ApproverUser")
  transfersDispensed    Transfer[] @relation("DispenserUser")
  transfersReceived     Transfer[] @relation("ReceiverUser")
  
  // Indexes สำหรับ Performance
  @@index([status])
  @@index([username])
  @@index([isActive])
  @@map("users")
}
