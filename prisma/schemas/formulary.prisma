// prisma/schemas/formulary.prisma
// Formulary Management and Drug Collections

// User formularies (collections of drugs)
model Formulary {
  id          String           @id @default(uuid())
  userId      String
  user        User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Basic information
  name        String           // เช่น "ICU Protocol", "Pediatric Ward", "OPD Standard"
  description String?
  category    String?          // เช่น "hospital", "clinic", "personal"
  
  // Settings
  isDefault   Boolean          @default(false)
  isActive    Boolean          @default(true)
  isTemplate  Boolean          @default(false)  // can be used as template by others
  
  // Sharing settings
  isPublic    Boolean          @default(false)
  shareCode   String?          @unique // for sharing with others
  sharePassword String?        // optional password protection
  
  // Version control
  version     String           @default("1.0")
  basedOnId   String?          // if cloned from another formulary
  basedOn     Formulary?       @relation("FormularyClones", fields: [basedOnId], references: [id], onDelete: SetNull)
  clones      Formulary[]      @relation("FormularyClones")
  
  // Metadata
  tags        String[]         // for categorization
  specialty   String?          // เช่น "pediatrics", "internal_medicine"
  institution String?          // hospital/clinic name
  
  // Usage statistics
  usageCount  Int              @default(0)
  lastUsed    DateTime?
  
  // Relations
  drugs       FormularyDrug[]
  shares      FormularyShare[]
  exports     FormularyExport[]
  
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@index([userId])
  @@index([isActive])
  @@index([isPublic])
  @@index([shareCode])
  @@index([category])
  @@index([specialty])
  @@map("formulary")
}

// Junction table for formulary drugs
model FormularyDrug {
  id            String      @id @default(uuid())
  formularyId   String
  formulary     Formulary   @relation(fields: [formularyId], references: [id], onDelete: Cascade)
  
  // Drug reference (either system or custom)
  drugId        String?     // system drug
  customDrugId  String?     // custom drug
  
  // Formulary-specific settings
  isPreferred   Boolean     @default(false)
  isRestricted  Boolean     @default(false)
  restrictionNote String?   // why restricted
  
  // Display and organization
  displayOrder  Int?
  section       String?     // เช่น "analgesics", "antibiotics"
  notes         String?     // formulary-specific notes
  
  // Override dosing for this formulary
  customDosing  String?     // JSON of custom dosing rules
  
  // Usage in this formulary
  usageCount    Int         @default(0)
  lastUsed      DateTime?
  
  // Approval status (for controlled formularies)
  isApproved    Boolean     @default(true)
  approvedBy    String?     // userId
  approvedAt    DateTime?
  
  addedBy       String      // userId who added this drug
  addedAt       DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@unique([formularyId, drugId])
  @@unique([formularyId, customDrugId])
  @@index([formularyId])
  @@index([isPreferred])
  @@index([section])
  @@map("formulary_drug")
}

// Formulary sharing permissions
model FormularyShare {
  id           String     @id @default(uuid())
  formularyId  String
  formulary    Formulary  @relation(fields: [formularyId], references: [id], onDelete: Cascade)
  
  sharedWithId String
  sharedWith   User       @relation(fields: [sharedWithId], references: [id], onDelete: Cascade)
  
  // Permission levels
  permission   String     @default("view") // "view", "edit", "admin"
  canShare     Boolean    @default(false)  // can share with others
  canExport    Boolean    @default(false)  // can export formulary
  
  // Access control
  expiresAt    DateTime?  // optional expiration
  isActive     Boolean    @default(true)
  
  // Invitation details
  invitedBy    String     // userId who shared
  invitationNote String?
  acceptedAt   DateTime?  // when invitation was accepted
  
  sharedAt     DateTime   @default(now())
  lastAccessed DateTime?

  @@unique([formularyId, sharedWithId])
  @@index([sharedWithId])
  @@index([permission])
  @@index([isActive])
  @@map("formulary_share")
}

// Export/import history
model FormularyExport {
  id           String     @id @default(uuid())
  formularyId  String
  formulary    Formulary  @relation(fields: [formularyId], references: [id], onDelete: Cascade)
  
  exportedBy   String     // userId
  exportType   String     // "json", "csv", "pdf", "excel"
  exportFormat String?    // detailed format specification
  
  // Export settings
  includeCustomDrugs Boolean @default(true)
  includeNotes      Boolean @default(true)
  includePricing    Boolean @default(false)
  
  // File information
  fileName     String?
  fileSize     Int?       // bytes
  downloadUrl  String?    // temporary URL for download
  
  // Usage tracking
  downloadCount Int       @default(0)
  lastDownload DateTime?
  
  createdAt    DateTime   @default(now())
  expiresAt    DateTime?  // when download expires

  @@index([formularyId])
  @@index([exportedBy])
  @@index([exportType])
  @@index([createdAt])
  @@map("formulary_export")
}

// Formulary templates (shared community templates)
model FormularyTemplate {
  id            String    @id @default(uuid())
  
  // Template information
  name          String
  description   String?
  category      String    // "pediatric", "emergency", "general"
  specialty     String?
  institution   String?   // contributing institution
  
  // Template data (JSON)
  templateData  String    // JSON structure of the formulary
  version       String    @default("1.0")
  
  // Sharing and approval
  isPublic      Boolean   @default(false)
  isApproved    Boolean   @default(false)
  approvedBy    String?   // admin userId
  approvedAt    DateTime?
  
  // Usage statistics
  usageCount    Int       @default(0)
  rating        Float?    // average user rating
  ratingCount   Int       @default(0)
  
  // Metadata
  tags          String[]
  country       String?   @default("TH")
  language      String?   @default("th")
  
  createdBy     String    // userId
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([category])
  @@index([specialty])
  @@index([isPublic])
  @@index([isApproved])
  @@index([usageCount])
  @@map("formulary_template")
}