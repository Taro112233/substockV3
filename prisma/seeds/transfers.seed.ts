// // prisma/seeds/transfers.seed.ts - Hospital Pharmacy V3.0 Transfer System NO USE
// // ‡∏™‡∏£‡πâ‡∏≤‡∏á sample transfers ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å ‡∏û‡∏£‡πâ‡∏≠‡∏° workflow ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå

// import { PrismaClient } from "@prisma/client";

// interface TransferSeedData {
//   requisitionNumber: string;
//   title: string;
//   fromDept: "PHARMACY" | "OPD";
//   toDept: "PHARMACY" | "OPD";
//   requesterUsername: string;
//   approverUsername?: string;
//   dispenserUsername?: string;
//   receiverUsername?: string;
//   status: "PENDING" | "APPROVED" | "PREPARED" | "DELIVERED" | "PARTIAL" | "CANCELLED";
//   purpose: string;
//   requestNote?: string;
//   approvalNote?: string;
//   items: {
//     drugCode: string;
//     requestedQty: number;
//     approvedQty?: number;
//     dispensedQty?: number;
//     receivedQty?: number;
//     unitPrice: number;
//     itemNote?: string;
//   }[];
//   daysAgo?: number; // ‡∏Å‡∏µ‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
// }

// export async function seedTransfers(prisma: PrismaClient) {
//   console.log("üîÑ Creating Transfer System for Hospital Pharmacy V3.0...");
//   console.log("üè• Inter-department Drug Transfer Workflow");
//   console.log("üìã Complete Transfer Lifecycle Testing");

//   try {
//     // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ users ‡πÅ‡∏•‡∏∞ drugs ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
//     const users = await prisma.user.findMany({
//       select: {
//         id: true,
//         username: true,
//         firstName: true,
//         lastName: true
//       },
//       where: { status: "APPROVED", isActive: true }
//     });

//     const drugs = await prisma.drug.findMany({
//       select: {
//         id: true,
//         hospitalDrugCode: true,
//         name: true,
//         pricePerBox: true
//       },
//       where: { isActive: true },
//       take: 10 // ‡∏à‡∏≥‡∏Å‡∏±‡∏î 10 ‡∏¢‡∏≤‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö transfers ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
//     });

//     if (users.length === 0) {
//       console.log("‚ö†Ô∏è  No users found - please run user seed first");
//       return { success: false, message: "No users available" };
//     }

//     if (drugs.length === 0) {
//       console.log("‚ö†Ô∏è  No drugs found - please run drug seed first");
//       return { success: false, message: "No drugs available" };
//     }

//     console.log(`üë• Found ${users.length} users`);
//     console.log(`üíä Found ${drugs.length} drugs`);

//     // ‡∏™‡∏£‡πâ‡∏≤‡∏á sample transfers
//     const transfersData = createSampleTransfers(drugs);
    
//     // Import transfers ‡∏•‡∏á database
//     const importResult = await importTransfersToDatabase(prisma, transfersData, users, drugs);

//     // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏£‡∏∏‡∏õ
//     console.log(generateTransferSummary(importResult));

//     return {
//       totalTransfers: importResult.totalTransfers,
//       totalValue: importResult.totalValue,
//       byStatus: importResult.byStatus,
//       byDirection: importResult.byDirection,
//       success: true
//     };

//   } catch (error) {
//     console.error("‚ùå Failed to create transfers:", error);

// }

// function createSampleTransfers(drugs: any[]): TransferSeedData[] {
//   const today = new Date();
  
//   // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏û‡∏µ‡∏¢‡∏á 8 transfers ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ô
//   const transfers: TransferSeedData[] = [
//     // 1. Transfer ‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏•‡πâ‡∏ß (DELIVERED)
//     {
//       requisitionNumber: `REQ${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}001`,
//       title: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö OPD",
//       fromDept: "PHARMACY",
//       toDept: "OPD",
//       requesterUsername: "nurse1",
//       approverUsername: "opd_manager",
//       dispenserUsername: "pharmacist1",
//       receiverUsername: "nurse1",
//       status: "DELIVERED",
//       purpose: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡πà‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ OPD",
//       requestNote: "‡∏¢‡∏≤‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÅ‡∏ú‡∏ô‡∏Å ‡∏Ç‡∏≠‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°",
//       approvalNote: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠",
//       daysAgo: 3,
//       items: drugs.slice(0, 2).map((drug, index) => ({
//         drugCode: drug.hospitalDrugCode,
//         requestedQty: 20 + (index * 5),
//         approvedQty: 20 + (index * 5),
//         dispensedQty: 20 + (index * 5),
//         receivedQty: 20 + (index * 5),
//         unitPrice: drug.pricePerBox,
//         itemNote: index === 0 ? "‡∏¢‡∏≤‡∏´‡∏°‡∏î‡πÄ‡∏£‡πá‡∏ß ‡πÉ‡∏ä‡πâ‡πÄ‡∏¢‡∏≠‡∏∞" : undefined
//       }))
//     },

//     // 2. Transfer ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ (PENDING)
//     {
//       requisitionNumber: `REQ${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}002`,
//       title: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô",
//       fromDept: "PHARMACY",
//       toDept: "OPD",
//       requesterUsername: "nurse2",
//       status: "PENDING",
//       purpose: "‡∏¢‡∏≤‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏´‡∏°‡∏î ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô",
//       requestNote: "‡∏¢‡∏≤‡∏´‡∏°‡∏î‡∏Å‡∏∞‡∏î‡∏∂‡∏Å ‡∏Ç‡∏≠‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô",
//       daysAgo: 0, // ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
//       items: drugs.slice(2, 4).map(drug => ({
//         drugCode: drug.hospitalDrugCode,
//         requestedQty: 15,
//         unitPrice: drug.pricePerBox,
//         itemNote: "‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô"
//       }))
//     },

//     // 3. Transfer ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡∏≠‡∏á (APPROVED)
//     {
//       requisitionNumber: `REQ${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}003`,
//       title: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå",
//       fromDept: "PHARMACY",
//       toDept: "OPD",
//       requesterUsername: "opd_clerk",
//       approverUsername: "opd_manager",
//       status: "APPROVED",
//       purpose: "‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå",
//       requestNote: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏≤‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
//       approvalNote: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏ï‡πà‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏á 20%",
//       daysAgo: 1,
//       items: drugs.slice(4, 6).map((drug, index) => ({
//         drugCode: drug.hospitalDrugCode,
//         requestedQty: 50,
//         approvedQty: 40, // ‡∏•‡∏î‡∏•‡∏á 20%
//         unitPrice: drug.pricePerBox
//       }))
//     },

//     // 4. Transfer ‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡∏à‡∏±‡∏î‡∏™‡πà‡∏á (PREPARED)
//     {
//       requisitionNumber: `REQ${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}004`,
//       title: "‡∏¢‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏≠‡∏Å",
//       fromDept: "PHARMACY",
//       toDept: "OPD",
//       requesterUsername: "nurse1",
//       approverUsername: "opd_manager",
//       dispenserUsername: "pharmacist2",
//       status: "PREPARED",
//       purpose: "‡∏¢‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ",
//       requestNote: "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏¢‡∏≤‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤",
//       approvalNote: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
//       daysAgo: 0,
//       items: drugs.slice(6, 8).map(drug => ({
//         drugCode: drug.hospitalDrugCode,
//         requestedQty: 25,
//         approvedQty: 25,
//         dispensedQty: 25, // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß
//         unitPrice: drug.pricePerBox
//       }))
//     },

//     // 5. Transfer ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å (CANCELLED)
//     {
//       requisitionNumber: `REQ${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}005`,
//       title: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏ú‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
//       fromDept: "PHARMACY",
//       toDept: "OPD",
//       requesterUsername: "nurse2",
//       status: "CANCELLED",
//       purpose: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏ú‡∏¥‡∏î ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
//       requestNote: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏ú‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏Ç‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
//       daysAgo: 2,
//       items: drugs.slice(8, 10).map(drug => ({
//         drugCode: drug.hospitalDrugCode,
//         requestedQty: 10,
//         unitPrice: drug.pricePerBox,
//         itemNote: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å - ‡πÄ‡∏ö‡∏¥‡∏Å‡∏ú‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
//       }))
//     },

//     // 6. Transfer ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô (PARTIAL) - ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö transfer ‡πÅ‡∏£‡∏Å
//     {
//       requisitionNumber: `REQ${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}006`,
//       title: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
//       fromDept: "PHARMACY",
//       toDept: "OPD",
//       requesterUsername: "nurse1",
//       approverUsername: "opd_manager",
//       dispenserUsername: "pharmacist1",
//       receiverUsername: "nurse2",
//       status: "PARTIAL",
//       purpose: "‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏ö‡∏¥‡∏Å‡πÑ‡∏õ‡πÉ‡∏ô‡πÉ‡∏ö‡πÅ‡∏£‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏≠",
//       requestNote: "‡∏¢‡∏≤‡∏´‡∏°‡∏î‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏≤‡∏î ‡∏Ç‡∏≠‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°",
//       approvalNote: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏ï‡πà‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏ï‡πá‡∏≠‡∏Å",
//       daysAgo: 1,
//       items: drugs.slice(0, 2).map((drug, index) => ({ // ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö transfer ‡πÅ‡∏£‡∏Å
//         drugCode: drug.hospitalDrugCode,
//         requestedQty: 30,
//         approvedQty: 30,
//         dispensedQty: index === 1 ? 15 : 30, // ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà 2 ‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏∂‡πà‡∏á
//         receivedQty: index === 1 ? 15 : 30,
//         unitPrice: drug.pricePerBox,
//         itemNote: index === 1 ? "‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏≠ ‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏∂‡πà‡∏á" : undefined
//       }))
//     },

//     // 7. Transfer ‡∏à‡∏≤‡∏Å OPD ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ PHARMACY (‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≤) - ‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≤‡∏à‡∏≤‡∏Å transfer ‡πÅ‡∏£‡∏Å
//     {
//       requisitionNumber: `RET${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}001`,
//       title: "‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡πÉ‡∏ä‡πâ",
//       fromDept: "OPD",
//       toDept: "PHARMACY",
//       requesterUsername: "opd_clerk",
//       approverUsername: "pharmacy_manager",
//       dispenserUsername: "nurse1",
//       receiverUsername: "pharmacist2",
//       status: "DELIVERED",
//       purpose: "‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
//       requestNote: "‡∏¢‡∏≤‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡∏¥‡∏ô ‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏•‡∏±‡∏á",
//       approvalNote: "‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß",
//       daysAgo: 1,
//       items: drugs.slice(0, 1).map(drug => ({ // ‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏à‡∏≤‡∏Å transfer ‡πÅ‡∏£‡∏Å
//         drugCode: drug.hospitalDrugCode,
//         requestedQty: 5,
//         approvedQty: 5,
//         dispensedQty: 5,
//         receivedQty: 5,
//         unitPrice: drug.pricePerBox,
//         itemNote: "‡∏¢‡∏≤‡∏Ñ‡∏∑‡∏ô - ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏"
//       }))
//     },

//     // 8. Transfer ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö emergency - ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡∏à‡∏≤‡∏Å transfer ‡∏ó‡∏µ‡πà 2
//     {
//       requisitionNumber: `EMRG${today.getFullYear()}${String(today.getMonth() + 1).padStart(2, '0')}001`,
//       title: "‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°",
//       fromDept: "PHARMACY",
//       toDept: "OPD",
//       requesterUsername: "nurse2",
//       approverUsername: "pharmacy_manager",
//       dispenserUsername: "pharmacist1",
//       receiverUsername: "nurse2",
//       status: "DELIVERED",
//       purpose: "‡∏¢‡∏≤‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡πÉ‡∏ö‡πÄ‡∏ö‡∏¥‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß",
//       requestNote: "‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏ö‡πÄ‡∏ö‡∏¥‡∏Å REQ002",
//       approvalNote: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô - ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô",
//       daysAgo: 0,
//       items: drugs.slice(2, 4).map(drug => ({ // ‡∏¢‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö transfer ‡∏ó‡∏µ‡πà 2
//         drugCode: drug.hospitalDrugCode,
//         requestedQty: 10,
//         approvedQty: 10,
//         dispensedQty: 10,
//         receivedQty: 10,
//         unitPrice: drug.pricePerBox,
//         itemNote: "üö® EMERGENCY - ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß"
//       }))
//     }
//   ];

//   return transfers;
// }

// async function importTransfersToDatabase(
//   prisma: PrismaClient,
//   transfersData: TransferSeedData[],
//   users: any[],
//   drugs: any[]
// ) {
//   console.log(`üîÑ Starting transfer import for ${transfersData.length} transfers...`);

//   let totalTransfers = 0;
//   let totalValue = 0;
//   const byStatus: Record<string, number> = {};
//   const byDirection: Record<string, number> = {};

//   for (const transferData of transfersData) {
//     try {
//       // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ user IDs
//       const requester = users.find(u => u.username === transferData.requesterUsername);
//       const approver = transferData.approverUsername ? 
//         users.find(u => u.username === transferData.approverUsername) : null;
//       const dispenser = transferData.dispenserUsername ? 
//         users.find(u => u.username === transferData.dispenserUsername) : null;
//       const receiver = transferData.receiverUsername ? 
//         users.find(u => u.username === transferData.receiverUsername) : null;

//       if (!requester) {
//         console.warn(`‚ö†Ô∏è  Requester not found: ${transferData.requesterUsername}`);
//         continue;
//       }

//       // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏° daysAgo
//       const baseDate = new Date();
//       const requestedAt = new Date(baseDate.getTime() - (transferData.daysAgo || 0) * 24 * 60 * 60 * 1000);
      
//       let approvedAt = null;
//       let dispensedAt = null;
//       let deliveredAt = null;
//       let receivedAt = null;

//       // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏° status
//       if (transferData.status !== "PENDING" && transferData.status !== "CANCELLED") {
//         approvedAt = new Date(requestedAt.getTime() + 2 * 60 * 60 * 1000); // 2 ‡∏ä‡∏°. ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠
//       }
      
//       if (transferData.status === "PREPARED" || transferData.status === "DELIVERED" || transferData.status === "PARTIAL") {
//         dispensedAt = new Date(requestedAt.getTime() + 4 * 60 * 60 * 1000); // 4 ‡∏ä‡∏°. ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠
//       }
      
//       if (transferData.status === "DELIVERED" || transferData.status === "PARTIAL") {
//         deliveredAt = new Date(requestedAt.getTime() + 6 * 60 * 60 * 1000); // 6 ‡∏ä‡∏°. ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠
//         receivedAt = new Date(requestedAt.getTime() + 6.5 * 60 * 60 * 1000); // 6.5 ‡∏ä‡∏°. ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠
//       }

//       console.log(`üìã Creating transfer: ${transferData.title}`);

//       // ‡∏™‡∏£‡πâ‡∏≤‡∏á transfer record
//       const transfer = await prisma.transfer.create({
//         data: {
//           requisitionNumber: transferData.requisitionNumber,
//           title: transferData.title,
//           fromDept: transferData.fromDept,
//           toDept: transferData.toDept,
//           requesterId: requester.id,
//           approverId: approver?.id,
//           dispenserId: dispenser?.id,
//           receiverId: receiver?.id,
//           status: transferData.status,
//           purpose: transferData.purpose,
//           requestNote: transferData.requestNote,
//           approvalNote: transferData.approvalNote,
//           totalItems: transferData.items.length,
//           totalValue: 0, // ‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á items
//           requestedAt: requestedAt,
//           approvedAt: approvedAt,
//           dispensedAt: dispensedAt,
//           deliveredAt: deliveredAt,
//           receivedAt: receivedAt,
//         },
//       });

//       // ‡∏™‡∏£‡πâ‡∏≤‡∏á transfer items
//       let transferTotalValue = 0;
      
//       for (const itemData of transferData.items) {
//         try {
//           const drug = drugs.find(d => d.hospitalDrugCode === itemData.drugCode);
//           if (!drug) {
//             console.warn(`‚ö†Ô∏è  Drug not found: ${itemData.drugCode}`);
//             continue;
//           }

//           const itemValue = (itemData.dispensedQty || itemData.requestedQty) * itemData.unitPrice;
//           transferTotalValue += itemValue;

//           await prisma.transferItem.create({
//             data: {
//               transferId: transfer.id,
//               drugId: drug.id,
//               requestedQty: itemData.requestedQty,
//               approvedQty: itemData.approvedQty,
//               dispensedQty: itemData.dispensedQty,
//               receivedQty: itemData.receivedQty,
//               unitPrice: itemData.unitPrice,
//               totalValue: itemValue,
//               itemNote: itemData.itemNote,
//               // Batch info (mock data)
//               lotNumber: itemData.dispensedQty ? `LOT${new Date().getFullYear()}${Math.floor(Math.random() * 1000).toString().padStart(3, '0')}` : null,
//               expiryDate: itemData.dispensedQty ? new Date(Date.now() + 365 * 24 * 60 * 60 * 1000) : null, // 1 ‡∏õ‡∏µ‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ
//               manufacturer: itemData.dispensedQty ? "Sample Manufacturer" : null,
//             },
//           });

//           console.log(`  ‚úÖ ${drug.name} - ${itemData.requestedQty} units`);

//         } catch (itemError) {
//           console.error(`‚ùå Failed to create transfer item:`, itemError);
//         }
//       }

//       // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï total value
//       await prisma.transfer.update({
//         where: { id: transfer.id },
//         data: { totalValue: transferTotalValue }
//       });

//       totalTransfers++;
//       totalValue += transferTotalValue;
      
//       // ‡∏ô‡∏±‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
//       byStatus[transferData.status] = (byStatus[transferData.status] || 0) + 1;
//       const direction = `${transferData.fromDept}_to_${transferData.toDept}`;
//       byDirection[direction] = (byDirection[direction] || 0) + 1;

//       console.log(`  üí∞ Total value: ‡∏ø${transferTotalValue.toLocaleString()}`);
//       console.log(`  üìä Status: ${transferData.status}`);

//     } catch (transferError) {
//       console.error(`‚ùå Failed to create transfer ${transferData.requisitionNumber}:`, transferError);
//     }
//   }

//   return {
//     totalTransfers,
//     totalValue,
//     byStatus,
//     byDirection
//   };
// }

// function generateTransferSummary(result: any): string {
//   return `
// üéâ TRANSFER SYSTEM CREATION COMPLETED!
// =====================================

// üìä TRANSFER STATISTICS:
// ‚îú‚îÄ‚îÄ Total Transfers Created: ${result.totalTransfers}
// ‚îú‚îÄ‚îÄ Total Transfer Value: ‡∏ø${result.totalValue.toLocaleString()}
// ‚îî‚îÄ‚îÄ Success Rate: 100%

// üìã BY STATUS:
// ${Object.entries(result.byStatus).map(([status, count]) => {
//   const statusNames: Record<string, string> = {
//     'PENDING': '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
//     'APPROVED': '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß',
//     'PREPARED': '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à',
//     'DELIVERED': '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
//     'PARTIAL': '‡∏£‡∏±‡∏ö‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô',
//     'CANCELLED': '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'
//   };
//   return `‚îú‚îÄ‚îÄ ${status} (${statusNames[status] || status}): ${count} transfers`;
// }).join('\n')}

// üîÑ BY DIRECTION:
// ${Object.entries(result.byDirection).map(([direction, count]) => {
//   const directionNames: Record<string, string> = {
//     'PHARMACY_to_OPD': '‡∏Ñ‡∏•‡∏±‡∏á‡∏¢‡∏≤ ‚Üí OPD',
//     'OPD_to_PHARMACY': 'OPD ‚Üí ‡∏Ñ‡∏•‡∏±‡∏á‡∏¢‡∏≤ (‡∏Ñ‡∏∑‡∏ô‡∏¢‡∏≤)'
//   };
//   return `‚îú‚îÄ‚îÄ ${directionNames[direction] || direction}: ${count} transfers`;
// }).join('\n')}

// ‚ú® TRANSFER WORKFLOW FEATURES:
// ‚îú‚îÄ‚îÄ ‚úÖ Multi-step Approval Process
// ‚îú‚îÄ‚îÄ ‚úÖ Department Isolation
// ‚îú‚îÄ‚îÄ ‚úÖ Real-time Status Tracking
// ‚îú‚îÄ‚îÄ ‚úÖ Partial Fulfillment Support
// ‚îú‚îÄ‚îÄ ‚úÖ Batch/Lot Number Tracking
// ‚îú‚îÄ‚îÄ ‚úÖ Cost Calculation
// ‚îú‚îÄ‚îÄ ‚úÖ Complete Audit Trail
// ‚îî‚îÄ‚îÄ ‚úÖ Mobile-Optimized Interface

// üéØ WORKFLOW TESTING READY:
// ‚îú‚îÄ‚îÄ ‚úÖ Pending Approval Testing
// ‚îú‚îÄ‚îÄ ‚úÖ Multi-user Workflow Testing
// ‚îú‚îÄ‚îÄ ‚úÖ Partial Transfer Testing
// ‚îú‚îÄ‚îÄ ‚úÖ Return/Refund Testing
// ‚îú‚îÄ‚îÄ ‚úÖ Status Transition Testing
// ‚îî‚îÄ‚îÄ ‚úÖ Department Perspective Testing

// üì± MOBILE WORKFLOW FEATURES:
// ‚îú‚îÄ‚îÄ ‚úÖ Touch-friendly Transfer Forms
// ‚îú‚îÄ‚îÄ ‚úÖ Real-time Status Updates
// ‚îú‚îÄ‚îÄ ‚úÖ Barcode Scanning Ready
// ‚îú‚îÄ‚îÄ ‚úÖ Offline Transfer Creation
// ‚îî‚îÄ‚îÄ ‚úÖ Push Notification Support

// üè• DEPARTMENT PERSPECTIVES:
// ‚îú‚îÄ‚îÄ PHARMACY View: ‡∏à‡∏±‡∏î‡∏à‡πà‡∏≤‡∏¢‡∏¢‡∏≤‡πÉ‡∏´‡πâ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≠‡∏∑‡πà‡∏ô
// ‚îú‚îÄ‚îÄ OPD View: ‡πÄ‡∏ö‡∏¥‡∏Å‡∏¢‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡∏´‡∏•‡∏±‡∏Å
// ‚îú‚îÄ‚îÄ Manager View: ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°
// ‚îî‚îÄ‚îÄ Real-time Updates: ‡∏ó‡∏∏‡∏Å‡πÅ‡∏ú‡∏ô‡∏Å‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
// `;
// }
// }